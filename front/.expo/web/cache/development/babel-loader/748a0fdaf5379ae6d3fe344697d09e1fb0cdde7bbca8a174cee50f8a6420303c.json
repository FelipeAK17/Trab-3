{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 16\n  },\n  tarefa: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginVertical: 4\n  },\n  tarefaTitulo: {\n    fontSize: 16,\n    flex: 1,\n    marginRight: 8\n  },\n  tarefaBotao: {\n    backgroundColor: \"lightgray\",\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 4\n  },\n  tarefaBotaoTexto: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  tarefaConcluida: {\n    textDecorationLine: \"line-through\"\n  }\n});\nexport var ListaTarefas = function ListaTarefas(_ref) {\n  var onConcluirTarefa = _ref.onConcluirTarefa,\n    onRemoverTarefa = _ref.onRemoverTarefa;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tarefas = _useState2[0],\n    setTarefas = _useState2[1];\n  useEffect(function () {\n    function fetchTarefas() {\n      return _fetchTarefas.apply(this, arguments);\n    }\n    function _fetchTarefas() {\n      _fetchTarefas = _asyncToGenerator(function* () {\n        var response = yield axios.get(\"http://localhost:3001/tasks\");\n        setTarefas(response.data.title);\n      });\n      return _fetchTarefas.apply(this, arguments);\n    }\n    fetchTarefas();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: tarefas.map(function (tarefa) {\n      return _jsxs(View, {\n        style: styles.tarefa,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.tarefaTitulo,\n          onPress: function onPress() {\n            return onConcluirTarefa(tarefa.id);\n          },\n          children: _jsx(Text, {\n            style: [styles.tarefaTitulo, tarefa.concluida && styles.tarefaConcluida],\n            children: tarefa.titulo\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.tarefaBotao,\n          onPress: function onPress() {\n            return onRemoverTarefa(tarefa.id);\n          },\n          children: _jsx(Text, {\n            style: styles.tarefaBotaoTexto,\n            children: \"Remover\"\n          })\n        })]\n      }, tarefa.id);\n    })\n  });\n};","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","TouchableOpacity","View","axios","jsx","_jsx","jsxs","_jsxs","styles","create","container","marginHorizontal","tarefa","flexDirection","alignItems","justifyContent","marginVertical","tarefaTitulo","fontSize","flex","marginRight","tarefaBotao","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","tarefaBotaoTexto","color","fontWeight","tarefaConcluida","textDecorationLine","ListaTarefas","_ref","onConcluirTarefa","onRemoverTarefa","_useState","_useState2","_slicedToArray","tarefas","setTarefas","fetchTarefas","_fetchTarefas","apply","arguments","_asyncToGenerator","response","get","data","title","style","children","map","onPress","id","concluida","titulo"],"sources":["C:/Users/bruno/Desktop/tfinal/To-do-list-main/src/componentes/ListaTarefas/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\ntype Tarefa = {\r\n  id: number;\r\n  titulo: string;\r\n  concluida: boolean;\r\n};\r\n\r\ntype Props = {\r\n  onConcluirTarefa: (id: number) => void;\r\n  onRemoverTarefa: (id: number) => void;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginHorizontal: 16,\r\n  },\r\n  tarefa: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginVertical: 4,\r\n  },\r\n  tarefaTitulo: {\r\n    fontSize: 16,\r\n    flex: 1,\r\n    marginRight: 8,\r\n  },\r\n  tarefaBotao: {\r\n    backgroundColor: \"lightgray\",\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 8,\r\n    borderRadius: 4,\r\n  },\r\n  tarefaBotaoTexto: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  tarefaConcluida: {\r\n    textDecorationLine: \"line-through\",\r\n  },\r\n});\r\n\r\nexport const ListaTarefas = ({ onConcluirTarefa, onRemoverTarefa }: Props) => {\r\n  const [tarefas, setTarefas] = useState<Tarefa[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTarefas() {\r\n      const response = await axios.get(\"http://localhost:3001/tasks\");\r\n      setTarefas(response.data.title);\r\n    }\r\n    fetchTarefas();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {tarefas.map((tarefa) => (\r\n        <View key={tarefa.id} style={styles.tarefa}>\r\n          <TouchableOpacity\r\n            style={styles.tarefaTitulo}\r\n            onPress={() => onConcluirTarefa(tarefa.id)}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.tarefaTitulo,\r\n                tarefa.concluida && styles.tarefaConcluida,\r\n              ]}\r\n            >\r\n              {tarefa.titulo}\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.tarefaBotao}\r\n            onPress={() => onRemoverTarefa(tarefa.id)}\r\n          >\r\n            <Text style={styles.tarefaBotaoTexto}>Remover</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}