{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Principal() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    taskList = _useState2[0],\n    setTaskList = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newTaskTitle = _useState4[0],\n    setNewTaskTitle = _useState4[1];\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n    function _fetchData() {\n      _fetchData = _asyncToGenerator(function* () {\n        var response = yield axios.get(\"http://localhost:3001/tasks\");\n        setTaskList(response.data);\n      });\n      return _fetchData.apply(this, arguments);\n    }\n    fetchData();\n  }, []);\n  function handleAddTask() {\n    return _handleAddTask.apply(this, arguments);\n  }\n  function _handleAddTask() {\n    _handleAddTask = _asyncToGenerator(function* () {\n      if (newTaskTitle === \"\") return;\n      var response = yield axios.post(\"http://localhost:3001/tasks\", {\n        title: newTaskTitle\n      });\n      setTaskList([].concat(_toConsumableArray(taskList), [response.data]));\n      setNewTaskTitle(\"\");\n    });\n    return _handleAddTask.apply(this, arguments);\n  }\n  function handleToggleTaskCompleted(_x) {\n    return _handleToggleTaskCompleted.apply(this, arguments);\n  }\n  function _handleToggleTaskCompleted() {\n    _handleToggleTaskCompleted = _asyncToGenerator(function* (id) {\n      var taskToUpdate = taskList.find(function (task) {\n        return task.id === id;\n      });\n      if (!taskToUpdate) return;\n      var response = yield axios.patch(\"http://localhost:3001/tasks/\" + id, {\n        title: taskToUpdate.title,\n        completed: !taskToUpdate.completed\n      });\n      var updatedTaskList = taskList.map(function (task) {\n        return task.id === response.data.id ? response.data : task;\n      });\n      setTaskList(updatedTaskList);\n    });\n    return _handleToggleTaskCompleted.apply(this, arguments);\n  }\n  function handleDeleteTask(_x2) {\n    return _handleDeleteTask.apply(this, arguments);\n  }\n  function _handleDeleteTask() {\n    _handleDeleteTask = _asyncToGenerator(function* (id) {\n      yield axios.delete(\"http://localhost:3001/tasks/\" + id);\n      var updatedTaskList = taskList.filter(function (task) {\n        return task.id !== id;\n      });\n      setTaskList(updatedTaskList);\n    });\n    return _handleDeleteTask.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Todo List\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Add a new task\",\n        value: newTaskTitle,\n        onChangeText: function onChangeText(text) {\n          return setNewTaskTitle(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: handleAddTask,\n        children: _jsx(Text, {\n          children: \"Add\"\n        })\n      })]\n    }), _jsx(FlatList, {\n      data: taskList,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.taskContainer,\n          onPress: function onPress() {\n            return handleToggleTaskCompleted(item.id);\n          },\n          children: [_jsx(Text, {\n            style: [styles.taskTitle, item.completed && styles.completedTaskTitle],\n            children: item.title\n          }), _jsx(Text, {\n            style: styles.taskStatus,\n            children: item.completed ? \"Completed\" : \"Incomplete\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleDeleteTask(item.id);\n            },\n            children: _jsx(Text, {\n              children: \"X\"\n            })\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 16,\n    paddingVertical: 32\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 16\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 16\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 10,\n    marginRight: 10\n  },\n  taskContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 16\n  },\n  taskTitle: {\n    flex: 1,\n    fontSize: 16\n  },\n  completedTaskTitle: {\n    textDecorationLine: \"line-through\",\n    color: \"#ccc\"\n  },\n  taskStatus: {\n    marginRight: 10,\n    color: \"#ccc\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","TextInput","TouchableOpacity","View","FlatList","axios","jsx","_jsx","jsxs","_jsxs","Principal","_useState","_useState2","_slicedToArray","taskList","setTaskList","_useState3","_useState4","newTaskTitle","setNewTaskTitle","fetchData","_fetchData","apply","arguments","_asyncToGenerator","response","get","data","handleAddTask","_handleAddTask","post","title","concat","_toConsumableArray","handleToggleTaskCompleted","_x","_handleToggleTaskCompleted","id","taskToUpdate","find","task","patch","completed","updatedTaskList","map","handleDeleteTask","_x2","_handleDeleteTask","delete","filter","style","styles","container","children","inputContainer","input","placeholder","value","onChangeText","text","onPress","renderItem","_ref","item","taskContainer","taskTitle","completedTaskTitle","taskStatus","keyExtractor","toString","create","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","paddingVertical","fontSize","fontWeight","marginBottom","flexDirection","borderWidth","borderColor","padding","marginRight","textDecorationLine","color"],"sources":["C:/Users/bruno/Desktop/tfinal/To-do-list-main/src/telas/Principal/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  FlatList,\n} from \"react-native\";\nimport axios from \"axios\";\n\ninterface Task {\n  id: number;\n  title: string;\n  completed: boolean;\n}\n\nexport default function Principal() {\n  const [taskList, setTaskList] = useState<Task[]>([]);\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await axios.get(\"http://localhost:3001/tasks\");\n      setTaskList(response.data);\n    }\n    fetchData();\n  }, []);\n\n  async function handleAddTask() {\n    if (newTaskTitle === \"\") return;\n    const response = await axios.post(\"http://localhost:3001/tasks\", {\n      title: newTaskTitle,\n    });\n    setTaskList([...taskList, response.data]);\n    setNewTaskTitle(\"\");\n  }\n\n  async function handleToggleTaskCompleted(id: number) {\n    const taskToUpdate = taskList.find((task) => task.id === id);\n    if (!taskToUpdate) return;\n    const response = await axios.patch(`http://localhost:3001/tasks/${id}`, {\n      title: taskToUpdate.title,\n      completed: !taskToUpdate.completed,\n    });\n    const updatedTaskList = taskList.map((task) =>\n      task.id === response.data.id ? response.data : task\n    );\n    setTaskList(updatedTaskList);\n  }\n\n  async function handleDeleteTask(id: number) {\n    await axios.delete(`http://localhost:3001/tasks/${id}`);\n    const updatedTaskList = taskList.filter((task) => task.id !== id);\n    setTaskList(updatedTaskList);\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Todo List</Text>\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Add a new task\"\n          value={newTaskTitle}\n          onChangeText={(text) => setNewTaskTitle(text)}\n        />\n        <TouchableOpacity onPress={handleAddTask}>\n          <Text>Add</Text>\n        </TouchableOpacity>\n      </View>\n      <FlatList\n        data={taskList}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            style={styles.taskContainer}\n            onPress={() => handleToggleTaskCompleted(item.id)}\n          >\n            <Text\n              style={[\n                styles.taskTitle,\n                item.completed && styles.completedTaskTitle,\n              ]}\n            >\n              {item.title}\n            </Text>\n            <Text style={styles.taskStatus}>\n              {item.completed ? \"Completed\" : \"Incomplete\"}\n            </Text>\n            <TouchableOpacity onPress={() => handleDeleteTask(item.id)}>\n              <Text>X</Text>\n            </TouchableOpacity>\n          </TouchableOpacity>\n        )}\n        keyExtractor={(item) => item.id.toString()}\n      />\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 16,\n    paddingVertical: 32,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 16,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 16,\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 10,\n    marginRight: 10,\n  },\n  taskContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 16,\n  },\n  taskTitle: {\n    flex: 1,\n    fontSize: 16,\n  },\n  completedTaskTitle: {\n    textDecorationLine: \"line-through\",\n    color: \"#ccc\",\n  },\n  taskStatus: {\n    marginRight: 10,\n    color: \"#ccc\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}